
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author erhal8376
 */
public class marksForm extends javax.swing.JFrame {

    ArrayList <Double> studentMarks = new ArrayList();
    private Component frame;
    
    /**
     * Creates new form marksForm
     */
    public marksForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JLabel();
        markPrompt = new javax.swing.JLabel();
        markInput = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaTwo = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaOne = new javax.swing.JTextArea();
        sortButton = new javax.swing.JButton();
        analyseButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        menu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        header.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        header.setForeground(new java.awt.Color(0, 0, 255));
        header.setText("Marks Program");

        markPrompt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        markPrompt.setText("Student Mark:");

        markInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                markInputKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                markInputKeyTyped(evt);
            }
        });

        addButton.setText("Add");
        addButton.setEnabled(false);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        textAreaTwo.setColumns(20);
        textAreaTwo.setRows(5);
        textAreaTwo.setFocusable(false);
        jScrollPane2.setViewportView(textAreaTwo);

        textAreaOne.setColumns(20);
        textAreaOne.setRows(5);
        textAreaOne.setFocusable(false);
        jScrollPane3.setViewportView(textAreaOne);

        sortButton.setText("Sort");
        sortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortButtonActionPerformed(evt);
            }
        });

        analyseButton.setText("Analyse");
        analyseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analyseButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        menu.add(jMenu1);

        jMenu2.setText("Edit");
        menu.add(jMenu2);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(markPrompt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(markInput, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sortButton))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(analyseButton)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(header)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(header)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(markPrompt)
                    .addComponent(markInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortButton)
                    .addComponent(analyseButton))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortButtonActionPerformed
        Collections.sort(studentMarks);
        Collections.reverse(studentMarks);
        textAreaOne.setText("");
        for (int i = 0; i < studentMarks.size(); i++) {
                       textAreaOne.append(studentMarks.get(i)+"\n");
        }
    }//GEN-LAST:event_sortButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        double mark = Double.parseDouble(markInput.getText());
        if ((mark>=0) && (mark<=100)) {
            studentMarks.add(mark);
            textAreaOne.append(Double.toString(mark)+"\n");
        }
        else {
            JOptionPane.showMessageDialog(frame, "Invalid Mark");
        }
        addButton.setEnabled(false);
    }//GEN-LAST:event_addButtonActionPerformed

    private void analyseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analyseButtonActionPerformed
        double avg = avgM();
        double min = minM();
        double max = maxM();
        double range = rngM(min, max);
        double levelFour = levelFourM();
        double levelThree = levelThreeM();
        double levelTwo = levelTwoM();
        double levelOne = levelOneM();
        double levelR = levelRM();
        
        textAreaTwo.setText("Class average: "+Math.round(avg*10)/10+"\n"
                +"Maximum mark: "+Math.round(max*10)/10+"\n"
                +"Minimum mark: "+Math.round(min*10)/10+"\n"
                +"Range of marks: "+Math.round(range*10)/10+"\n"
                +"Number at level 4: "+levelFour+"\n"
                +"Number at level 3: "+levelThree+"\n"
                +"Number at level 2: "+levelTwo+"\n"
                +"Number at level 1: "+levelOne+"\n"
                +"Number at level R: "+levelR+"\n"
                );
    }//GEN-LAST:event_analyseButtonActionPerformed

    private double avgM() {
        double sum = 0;
        for(int i = 0; i < studentMarks.size(); i++)
        {
            sum += studentMarks.get(i);
        }
        return sum/studentMarks.size();
    }
    
    private double minM() {
        return (Collections.min(studentMarks));
    }
    
    private double maxM() {
        return (Collections.max(studentMarks));
    }
    
    private double rngM(double min, double max) {
        return max-min;
    }
    
    private int levelFourM() {
        int count = 0;
        for(int i = 0; i < studentMarks.size(); i++)
        {
            if (studentMarks.get(i) >= 80) {
                count += 1;
            }
        }
        return count;
    }
    
    private int levelThreeM() {
        int count = 0;
        for(int i = 0; i < studentMarks.size(); i++)
        {
            if ((studentMarks.get(i) >= 70) && (studentMarks.get(i) < 80)) {
                count += 1;
            }
        }
        return count;
    }
    
    private int levelTwoM() {
        int count = 0;
        for(int i = 0; i < studentMarks.size(); i++)
        {
            if ((studentMarks.get(i) >= 60) && (studentMarks.get(i) < 70)) {
                count += 1;
            }
        }
        return count;
    }
    
    private int levelOneM() {
        int count = 0;
        for(int i = 0; i < studentMarks.size(); i++)
        {
            if ((studentMarks.get(i) >= 50) && (studentMarks.get(i) < 60)) {
                count += 1;
            }
        }
        return count;
    }
    
    private int levelRM() {
        int count = 0;
        for(int i = 0; i < studentMarks.size(); i++)
        {
            if (studentMarks.get(i) < 50) {
                count += 1;
            }
        }
        return count;
    }
    
    private void markInputKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_markInputKeyTyped
        
    }//GEN-LAST:event_markInputKeyTyped

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void markInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_markInputKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            double mark = Double.parseDouble(markInput.getText());
            if ((mark>=0) && (mark<=100)) {
                studentMarks.add(mark);
                textAreaOne.append(Double.toString(mark)+"\n");
            }
            else {
                JOptionPane.showMessageDialog(frame, "Invalid Mark");
            }
            addButton.setEnabled(false);
            }
        else {
            addButton.setEnabled(true);
        }
    }//GEN-LAST:event_markInputKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(marksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(marksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(marksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(marksForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new marksForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton analyseButton;
    private javax.swing.JLabel header;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField markInput;
    private javax.swing.JLabel markPrompt;
    private javax.swing.JMenuBar menu;
    private javax.swing.JButton sortButton;
    private javax.swing.JTextArea textAreaOne;
    private javax.swing.JTextArea textAreaTwo;
    // End of variables declaration//GEN-END:variables

}
